/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TimeInstant
 */
export interface TimeInstant {
    /**
     * 
     * @type {Date}
     * @memberof TimeInstant
     */
    time?: Date;
    /**
     * 
     * @type {number}
     * @memberof TimeInstant
     */
    year?: number;
    /**
     * 
     * @type {number}
     * @memberof TimeInstant
     */
    month?: number;
    /**
     * 
     * @type {number}
     * @memberof TimeInstant
     */
    day?: number;
    /**
     * 
     * @type {number}
     * @memberof TimeInstant
     */
    hour?: number;
    /**
     * 
     * @type {number}
     * @memberof TimeInstant
     */
    minute?: number;
}

/**
 * Check if a given object implements the TimeInstant interface.
 */
export function instanceOfTimeInstant(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TimeInstantFromJSON(json: any): TimeInstant {
    return TimeInstantFromJSONTyped(json, false);
}

export function TimeInstantFromJSONTyped(json: any, ignoreDiscriminator: boolean): TimeInstant {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'time': !exists(json, 'time') ? undefined : (new Date(json['time'])),
        'year': !exists(json, 'year') ? undefined : json['year'],
        'month': !exists(json, 'month') ? undefined : json['month'],
        'day': !exists(json, 'day') ? undefined : json['day'],
        'hour': !exists(json, 'hour') ? undefined : json['hour'],
        'minute': !exists(json, 'minute') ? undefined : json['minute'],
    };
}

export function TimeInstantToJSON(value?: TimeInstant | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'time': value.time === undefined ? undefined : (value.time.toISOString()),
        'year': value.year,
        'month': value.month,
        'day': value.day,
        'hour': value.hour,
        'minute': value.minute,
    };
}

